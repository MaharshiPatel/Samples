# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: cpm-nuget
on: [push]

jobs:
  build:
    env:
      JF_URL: ${{ secrets.JF_URL }}
      JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
      SERVER_ID: "rtsaas"
      REPO: "alpha-nuget-virtual"
      PROD_REPO: "alpha-nuget-prod-virtual"
    
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Setup JFrog CLI 
      uses: jfrog/setup-jfrog-cli@v3.4.0
    - name: JFrog CLI config
      run: jf c add $SERVER_ID --url=$JF_URL --access-token=$JF_ACCESS_TOKEN --interactive=false
    - name: Ping JFrog CLI
      run: jf rt ping --server-id=$SERVER_ID
    - name: NugetConfig
      run: jf nugetc --server-id-resolve=$SERVER_ID --repo-resolve=$REPO
    - name: Restore dependencies
      working-directory: ./CentralPackageManagementExample/
      run: jf nuget restore --build-name=cpm-nuget --build-number=${{ github.run_number }}
    - name: Collect Build Info
      run: |
        # Add env vars
        jf rt bce
        # Collect VCS details from git and add them to the build
        jf rt bag
        #Publish build-info
        jf rt bp
    - name: Build Scan
      run: |
        jf bs --fail=true cpm-nuget ${{ github.run_number }}
    - name: Promotion
      run: |
        jf rt bpr cpm-nuget ${{ github.run_number }} $PROD_REPO --status='PROD Candidate' --comment='webservice is now QA candidate and hand over for regression test' --copy=true --props="maintainer=maharship;stage=prod"
